{
  "name": "cfml-auto-formatter",
  "displayName": "CFML Auto Formatter",
  "publisher": "hri",
  "description": "CFML Indent Formatter / CFML 自动缩进",
  "icon": "images/icon.png",
  "version": "1.0.11",
  "author": "SATT李",
  "license": "MIT",
  "engines": {
    "vscode": "^1.80.0"
  },
  "categories": [
    "Formatters"
  ],
  "activationEvents": [
    "onLanguage:cfml",
    "onLanguage:cfc"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/satt-hri/vscode-plugin-cf-formatter.git"
  },
  "scripts": {
    "build": "webpack --mode production",
    "watch": "webpack --mode development --watch",
    "prepackage": "npm run build",
    "package": "vsce package"
  },
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "hri.cfml.formatDocument",
        "title": "Format CFML (satt)",
        "category": "CFML"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "hri.cfml.formatDocument",
          "when": "editorLangId == cfml",
          "group": "1_modification"
        }
      ],
      "commandPalette": [
        {
          "command": "hri.cfml.formatDocument",
          "when": "editorLangId == cfml"
        }
      ]
    },
    "keybindings": [
      {
        "command": "hri.cfml.formatDocument",
        "key": "shift+alt+m",
        "when": "editorLangId == cfml && editorTextFocus"
      }
    ],
    "configuration": {
      "title": "Format CFML (satt)",
      "properties": {
        "hri.cfml.formatter.indentWithTabs": {
          "type": "boolean",
          "default": true,
          "description": "Use tabs for indentation instead of spaces."
        },
        "hri.cfml.formatter.indentSize": {
          "type": "number",
          "default": 4,
          "minimum": 1,
          "maximum": 10,
          "description": "Number of spaces to use for indentation when using spaces."
        },
        "hri.cfml.formatter.indentChar": {
          "type": "string",
          "default": " ",
          "enum": [
            " ",
            "\t"
          ],
          "description": "Character to use for indentation. ' ' (space) or '\\t' (tab). Note: This setting is overridden by indentWithTabs."
        },
        "hri.cfml.formatter.wrapLineLength": {
          "type": "number",
          "default": 0,
          "minimum": 0,
          "description": "Maximum line length before wrapping. Set to 0 for no limit."
        },
        "hri.cfml.formatter.maxPreserveNewlines": {
          "type": "number",
          "default": 2,
          "minimum": 0,
          "maximum": 10,
          "description": "Maximum number of consecutive newlines to preserve in the output."
        },
        "hri.cfml.formatter.preserveNewlines": {
          "type": "boolean",
          "default": true,
          "description": "Preserve existing line breaks in the output."
        },
        "hri.cfml.formatter.keepArrayIndentation": {
          "type": "boolean",
          "default": false,
          "description": "Preserve the original indentation of arrays instead of re-indenting them."
        },
        "hri.cfml.formatter.braceStyle": {
          "type": "string",
          "default": "collapse",
          "enum": [
            "collapse",
            "expand",
            "end-expand",
            "none"
          ],
          "description": "Brace style to use. 'collapse': opening brace on same line, 'expand': opening brace on new line, 'end-expand': new line for functions/blocks only, 'none': keep original position."
        },
        "hri.cfml.formatter.breakChainedMethods": {
          "type": "boolean",
          "default": false,
          "description": "Break chained method calls across multiple lines."
        },
        "hri.cfml.formatter.spaceBeforeConditional": {
          "type": "boolean",
          "default": true,
          "description": "Add space before conditional statements (if, while, for)."
        },
        "hri.cfml.formatter.endWithNewline": {
          "type": "boolean",
          "default": false,
          "description": "End files with a newline character."
        }
      }
    }
  },
  "devDependencies": {
    "@types/js-beautify": "^1.14.3",
    "@types/mocha": "^10.0.10",
    "@types/node": "^24.2.1",
    "@types/vscode": "^1.76.0",
    "ts-loader": "^9.5.2",
    "typescript": "^5.9.2",
    "vsce": "^2.10.0",
    "webpack-cli": "^6.0.1"
  },
  "dependencies": {
    "js-beautify": "^1.15.4",
    "sql-formatter": "^15.6.6"
  }
}
